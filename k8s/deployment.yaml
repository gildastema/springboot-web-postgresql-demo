apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-web-postgres
  labels:
    app: springboot-web-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-web-postgres
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-database : "secrets/database/credentials"
        vault.hashicorp.com/role: "app"
        vault.hashicorp.com/agent-inject-template-database: |
          {{- with secret "secrets/database/credentials" -}}
            export DB_USER="{{ .Data.user }}"
            export DB_PASSWORD="{{ .Data.password }}"
            export DB_URL="{{ .Data.url }}"
          {{- end }}
      name: springboot-web-postgres
      labels:
        app: springboot-web-postgres
    spec:
      serviceAccountName: springboot-web-postgres-sa
      containers:
        - name: springboot-web-postgres
          image: gildastema/springboot-k8s-web-postgres:1.1-SNAPSHOT
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          # resources:
          #  requests:
          #    memory: "512Mi"
          #    cpu: "512m"
          #  limits:
          #    memory: "1024Mi"
          #    cpu: "1024m"
          env: 
              - name: VAULT_SECRET_DIRECTORY
                value: /vault/secrets
              - name: VAULT_SECRET_PATH
                value: /vault/secrets/database
          livenessProbe:
            httpGet:
              port: 8080
              path: "/actuator/health/liveness"
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              port: 8080
              path: "/actuator/health/readiness"
            initialDelaySeconds: 10
            periodSeconds: 5

